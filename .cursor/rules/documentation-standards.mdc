---
alwaysApply: true
description: "Atualiza√ß√£o obrigat√≥ria do README.md e CHANGELOG.md em cada nova funcionalidade ou mudan√ßa relevante"
---

# üìÑ Documenta√ß√£o de Mudan√ßas

## README.md
- Toda **nova funcionalidade** deve ser documentada no `README.md`.
- O `README.md` deve seguir a **estrutura padronizada** obrigat√≥ria.

### Estrutura Obrigat√≥ria do README.md
```md
# App Gest√£o Pessoal

## üöÄ Funcionalidades Atuais
- [Lista de funcionalidades implementadas]

## üì¶ Instala√ß√£o
```bash
npm install
npm run dev
```

## üîß Configura√ß√µes de Ambiente
```bash
# .env
SUPABASE_URL=your_supabase_url
SUPABASE_ANON_KEY=your_anon_key
# ... outras vari√°veis
```

## üìñ Como Usar
[Instru√ß√µes de uso b√°sico]

## üéØ Exemplos de Uso
[Exemplos pr√°ticos com c√≥digo]

## üîó Depend√™ncias
[Lista de depend√™ncias externas]

## üìö Documenta√ß√£o Adicional
[Links para docs espec√≠ficas]
```

### Exemplo de Atualiza√ß√£o no README
```md
## üöÄ Funcionalidades Atuais
- ‚úÖ Autentica√ß√£o JWT
- ‚úÖ Gest√£o de usu√°rios
- ‚úÖ **NOVA**: Exporta√ß√£o de relat√≥rios em PDF
- ‚úÖ Dashboard de m√©tricas

## üéØ Exemplos de Uso

### Exporta√ß√£o de Relat√≥rios
```typescript
// Exportar relat√≥rio de vendas
const report = await crm.reports.export({ 
  format: "pdf", 
  orderId: "12345",
  tenantId: "tenant-abc"
});

// Download autom√°tico
window.open(report.downloadUrl);
```

### Depend√™ncias
- **Supabase**: Configurar permiss√£o `reports:export` no RLS
- **PDFKit**: Para gera√ß√£o de PDFs
- **Multer**: Para upload de arquivos
```

---

## CHANGELOG.md
- Toda mudan√ßa significativa deve ser listada no `CHANGELOG.md`.
- Seguir **versionamento sem√¢ntico (SemVer)**:  
  - `MAJOR` ‚Üí mudan√ßas incompat√≠veis.  
  - `MINOR` ‚Üí novas funcionalidades retrocompat√≠veis.  
  - `PATCH` ‚Üí corre√ß√µes retrocompat√≠veis.  

### Formato obrigat√≥rio
```md
## [1.2.0] - 2025-09-21
### Added
- Exporta√ß√£o de relat√≥rios em PDF

### Changed
- Melhorias na performance da API de clientes

### Fixed
- Corrigido bug de autentica√ß√£o em m√∫ltiplos tenants

### Security
- Atualizada depend√™ncia `jsonwebtoken` para vers√£o segura
```

---

## Regras Gerais

* Nunca mergear uma nova funcionalidade sem atualizar `README.md` e `CHANGELOG.md`.
* Revisores devem bloquear PRs que n√£o incluam essas atualiza√ß√µes.
* Releases devem sempre ter vers√£o incrementada no `CHANGELOG.md`.

---

## Integra√ß√£o com CI/CD

### Valida√ß√£o Autom√°tica Avan√ßada
```yaml
# .github/workflows/docs-check.yml
name: Documentation Check

on:
  pull_request:
    branches: [main]

jobs:
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Check Documentation Updates
        run: |
          # Verificar se arquivos de docs foram alterados
          if ! git diff --name-only origin/main...HEAD | grep -Eq "README.md|CHANGELOG.md"; then
            echo "‚ùå PR must update README.md or CHANGELOG.md"
            exit 1
          fi
          
          # Verificar se commits Feat: ou Fix: alteraram CHANGELOG.md
          if git log --oneline origin/main...HEAD | grep -E "^(feat|fix):" && ! git diff --name-only origin/main...HEAD | grep -q "CHANGELOG.md"; then
            echo "‚ùå Feat/Fix commits must update CHANGELOG.md"
            exit 1
          fi
          
          # Validar formato do CHANGELOG.md
          if git diff --name-only origin/main...HEAD | grep -q "CHANGELOG.md"; then
            echo "üîç Validating CHANGELOG.md format..."
            if ! grep -q "## \[.*\] - [0-9]{4}-[0-9]{2}-[0-9]{2}" CHANGELOG.md; then
              echo "‚ùå CHANGELOG.md must follow format: ## [version] - YYYY-MM-DD"
              exit 1
            fi
          fi
          
          # Validar estrutura do README.md
          if git diff --name-only origin/main...HEAD | grep -q "README.md"; then
            echo "üîç Validating README.md structure..."
            if ! grep -q "## üöÄ Funcionalidades Atuais" README.md; then
              echo "‚ùå README.md must include 'Funcionalidades Atuais' section"
              exit 1
            fi
          fi
          
          echo "‚úÖ Documentation validation passed"
      
      - name: Check Semantic Versioning
        run: |
          if git diff --name-only origin/main...HEAD | grep -q "CHANGELOG.md"; then
            # Extrair vers√£o do CHANGELOG.md
            VERSION=$(grep -o "## \[.*\]" CHANGELOG.md | head -1 | sed 's/## \[//' | sed 's/\]//')
            echo "Found version: $VERSION"
            
            # Validar formato SemVer
            if ! echo "$VERSION" | grep -E "^[0-9]+\.[0-9]+\.[0-9]+$"; then
              echo "‚ùå Version must follow SemVer format (e.g., 1.2.3)"
              exit 1
            fi
          fi
```

### Release Automation
```yaml
# .github/workflows/release.yml
name: Release

on:
  push:
    branches: [main]
    paths:
      - 'CHANGELOG.md'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install standard-version
        run: npm install -g standard-version
      
      - name: Create Release
        run: |
          # Extrair vers√£o do CHANGELOG.md
          VERSION=$(grep -o "## \[.*\]" CHANGELOG.md | head -1 | sed 's/## \[//' | sed 's/\]//')
          
          # Criar tag e release
          git tag "v$VERSION"
          git push origin "v$VERSION"
          
          # Criar release no GitHub
          gh release create "v$VERSION" \
            --title "Release v$VERSION" \
            --notes-file <(grep -A 1000 "## \[$VERSION\]" CHANGELOG.md | head -50)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```

---

## üîß Automa√ß√£o com standard-version

### Configura√ß√£o do package.json
```json
{
  "scripts": {
    "release": "standard-version",
    "release:minor": "standard-version --release-as minor",
    "release:major": "standard-version --release-as major",
    "release:patch": "standard-version --release-as patch"
  },
  "standard-version": {
    "skip": {
      "changelog": false,
      "commit": false,
      "tag": false
    },
    "types": {
      "feat": {
        "section": "Features"
      },
      "fix": {
        "section": "Bug Fixes"
      },
      "chore": {
        "section": "Chores"
      },
      "docs": {
        "section": "Documentation"
      },
      "style": {
        "section": "Styles"
      },
      "refactor": {
        "section": "Code Refactoring"
      },
      "perf": {
        "section": "Performance Improvements"
      },
      "test": {
        "section": "Tests"
      }
    }
  }
}
```

### Uso do standard-version
```bash
# Release autom√°tico baseado nos commits
npm run release

# Release espec√≠fico
npm run release:minor  # 1.0.0 -> 1.1.0
npm run release:major  # 1.0.0 -> 2.0.0
npm run release:patch  # 1.0.0 -> 1.0.1
```

## üìã Checklist de Revis√£o para Revisores

### Antes de Aprovar PR
- [ ] **README.md** foi atualizado com nova funcionalidade?
- [ ] **CHANGELOG.md** foi atualizado com vers√£o correta?
- [ ] **Vers√£o segue SemVer** (MAJOR.MINOR.PATCH)?
- [ ] **Estrutura do README** inclui se√ß√µes obrigat√≥rias?
- [ ] **Exemplos de c√≥digo** est√£o funcionais?
- [ ] **Depend√™ncias** est√£o documentadas?
- [ ] **Commits Feat:/Fix:** alteraram CHANGELOG.md?

### Valida√ß√£o de Conte√∫do
- [ ] **Descri√ß√£o clara** da funcionalidade no README
- [ ] **Exemplos pr√°ticos** com c√≥digo TypeScript
- [ ] **Instru√ß√µes de instala√ß√£o** atualizadas
- [ ] **Configura√ß√µes de ambiente** documentadas
- [ ] **Links funcionais** para documenta√ß√£o adicional

### Valida√ß√£o de Formato
- [ ] **CHANGELOG.md** segue formato `## [vers√£o] - YYYY-MM-DD`
- [ ] **Categorias corretas**: Added, Changed, Fixed, Security
- [ ] **README.md** tem se√ß√£o "Funcionalidades Atuais"
- [ ] **Emojis consistentes** em t√≠tulos
- [ ] **C√≥digo formatado** com syntax highlighting

# ‚úÖ Checklist Score 10

### Documenta√ß√£o
- [ ] **README.md** atualizado com cada nova funcionalidade
- [ ] **CHANGELOG.md** atualizado em cada mudan√ßa relevante
- [ ] **Estrutura padronizada** do README seguida
- [ ] **Formato SemVer** respeitado no CHANGELOG
- [ ] **Exemplos pr√°ticos** inclu√≠dos

### Automa√ß√£o
- [ ] **CI valida** altera√ß√µes em docs automaticamente
- [ ] **Commits Feat:/Fix:** obrigam atualiza√ß√£o do CHANGELOG
- [ ] **Formato SemVer** validado automaticamente
- [ ] **Release automation** configurada
- [ ] **standard-version** integrado

### Qualidade
- [ ] **PRs sem docs** s√£o bloqueados automaticamente
- [ ] **Revisores** seguem checklist de valida√ß√£o
- [ ] **Estrutura consistente** em toda documenta√ß√£o
- [ ] **Links funcionais** e exemplos testados
- [ ] **Versionamento** sempre incrementado