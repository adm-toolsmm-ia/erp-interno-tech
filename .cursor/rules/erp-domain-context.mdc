---
description: "Contexto de Dom√≠nios do ERP Interno Tech"
globs: *.ts,*.tsx,*.js,*.jsx
---

# üéØ Dom√≠nio: Projeto - ERP Interno Tech

## Vis√£o Geral

O dom√≠nio de Projeto √© o n√∫cleo do ERP, gerenciando todo o ciclo de vida dos projetos desde a cria√ß√£o at√© a conclus√£o.

## Modelo de Dados

### **Schema Prisma**
```prisma
model Projeto {
  id          String   @id @default(cuid())
  nome        String
  descricao   String?
  status      StatusProjeto
  dataInicio  DateTime
  dataFim     DateTime?
  orcamento   Decimal?
  empresaId   String
  clienteId   String?
  
  // Relacionamentos
  cliente     Cliente?     @relation(fields: [clienteId], references: [id])
  documentos  Documento[]
  orcamentos  Orcamento[]
  tarefas     Tarefa[]
  
  // Auditoria
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String?
  updatedBy   String?
  
  @@map("projetos")
}

enum StatusProjeto {
  RASCUNHO
  ATIVO
  PAUSADO
  CONCLUIDO
  CANCELADO
}
```

## Regras de Neg√≥cio

### **1. Cria√ß√£o de Projetos**
- ‚úÖ Apenas usu√°rios da empresa podem criar
- ‚úÖ Nome √© obrigat√≥rio e √∫nico por empresa
- ‚úÖ Data de in√≠cio n√£o pode ser no passado
- ‚úÖ Cliente deve existir e pertencer √† empresa

### **2. Status de Projetos**
- ‚úÖ **RASCUNHO**: Projeto em cria√ß√£o, pode ser editado livremente
- ‚úÖ **ATIVO**: Projeto em execu√ß√£o, mudan√ßas controladas
- ‚úÖ **PAUSADO**: Projeto temporariamente parado
- ‚úÖ **CONCLUIDO**: Projeto finalizado, apenas leitura
- ‚úÖ **CANCELADO**: Projeto cancelado, apenas leitura

### **3. Transi√ß√µes de Status**
```mermaid
stateDiagram-v2
    [*] --> RASCUNHO
    RASCUNHO --> ATIVO : Ativar
    RASCUNHO --> CANCELADO : Cancelar
    ATIVO --> PAUSADO : Pausar
    ATIVO --> CONCLUIDO : Finalizar
    ATIVO --> CANCELADO : Cancelar
    PAUSADO --> ATIVO : Retomar
    PAUSADO --> CANCELADO : Cancelar
    CONCLUIDO --> [*]
    CANCELADO --> [*]
```

### **4. Valida√ß√µes**
- ‚úÖ Data de fim deve ser posterior √† data de in√≠cio
- ‚úÖ Or√ßamento deve ser positivo
- ‚úÖ Projeto ativo deve ter pelo menos um or√ßamento
- ‚úÖ Projeto conclu√≠do deve ter todos os documentos obrigat√≥rios

## APIs

### **Endpoints**
```
GET    /api/projetos              # Listar projetos
POST   /api/projetos              # Criar projeto
GET    /api/projetos/{id}         # Obter projeto
PUT    /api/projetos/{id}         # Atualizar projeto
DELETE /api/projetos/{id}         # Deletar projeto
POST   /api/projetos/{id}/status  # Alterar status
```

### **Filtros**
- `status`: Filtrar por status
- `clienteId`: Filtrar por cliente
- `dataInicio`: Filtrar por data de in√≠cio
- `dataFim`: Filtrar por data de fim
- `orcamento`: Filtrar por faixa de or√ßamento

### **Ordena√ß√£o**
- `nome`: Ordenar por nome
- `dataInicio`: Ordenar por data de in√≠cio
- `status`: Ordenar por status
- `orcamento`: Ordenar por or√ßamento

## Fluxos de Trabalho

### **1. Cria√ß√£o de Projeto**
```mermaid
sequenceDiagram
    participant U as Usu√°rio
    participant A as API
    participant D as Database
    participant C as Cliente
    
    U->>A: POST /api/projetos
    A->>D: Validar empresaId
    A->>C: Validar clienteId
    A->>D: Criar projeto
    A->>U: Retornar projeto criado
```

### **2. Ativa√ß√£o de Projeto**
```mermaid
sequenceDiagram
    participant U as Usu√°rio
    participant A as API
    participant D as Database
    participant O as Or√ßamento
    
    U->>A: POST /api/projetos/{id}/status
    A->>D: Validar projeto
    A->>O: Verificar or√ßamento
    A->>D: Atualizar status
    A->>U: Retornar projeto atualizado
```

## Relacionamentos

### **1. Cliente**
- Um projeto pode ter um cliente
- Cliente deve pertencer √† mesma empresa
- Cliente pode ter m√∫ltiplos projetos

### **2. Documentos**
- Um projeto pode ter m√∫ltiplos documentos
- Documentos s√£o versionados
- Documentos herdam permiss√µes do projeto

### **3. Or√ßamentos**
- Um projeto pode ter m√∫ltiplos or√ßamentos
- Apenas um or√ßamento pode estar ativo
- Or√ßamentos s√£o auditados

### **4. Tarefas**
- Um projeto pode ter m√∫ltiplas tarefas
- Tarefas s√£o organizadas hierarquicamente
- Tarefas t√™m status e respons√°veis

## Permiss√µes

### **Por Role**
- **ADMIN**: Acesso total a todos os projetos
- **GERENTE**: Acesso a projetos da empresa
- **USUARIO**: Acesso a projetos atribu√≠dos
- **CLIENTE_EXTERNO**: Acesso apenas aos seus projetos

### **Por Status**
- **RASCUNHO**: Apenas criador pode editar
- **ATIVO**: Equipe do projeto pode editar
- **CONCLUIDO**: Apenas leitura
- **CANCELADO**: Apenas leitura

## M√©tricas e KPIs

### **M√©tricas de Projeto**
- Tempo m√©dio de execu√ß√£o
- Or√ßamento vs. custo real
- Taxa de conclus√£o no prazo
- Satisfa√ß√£o do cliente

### **M√©tricas de Equipe**
- Projetos por usu√°rio
- Produtividade por per√≠odo
- Tempo de resposta
- Qualidade dos entreg√°veis

## Integra√ß√µes

### **1. Documentos**
- Upload autom√°tico de documentos
- Versionamento autom√°tico
- Busca sem√¢ntica

### **2. Or√ßamentos**
- C√°lculo autom√°tico de custos
- Alertas de estouro
- Relat√≥rios financeiros

### **3. Notifica√ß√µes**
- Mudan√ßas de status
- Prazos pr√≥ximos
- Aprova√ß√µes pendentes

## Agentes IA

### **Agente Gerente Virtual**
- Analisa performance de projetos
- Sugere otimiza√ß√µes
- Previne riscos

### **Agente Auditor**
- Verifica consist√™ncia
- Valida regras de neg√≥cio
- Gera relat√≥rios

### **Agente de Atendimento**
- Responde d√∫vidas de clientes
- Gera relat√≥rios de status
- Agenda reuni√µes

## Testes

### **Testes Unit√°rios**
- Valida√ß√£o de campos
- Regras de neg√≥cio
- Transi√ß√µes de status

### **Testes de Integra√ß√£o**
- APIs completas
- Relacionamentos
- Permiss√µes

### **Testes de Performance**
- Carga de projetos
- Consultas complexas
- Relat√≥rios

## Monitoramento

### **Logs**
- Cria√ß√£o de projetos
- Mudan√ßas de status
- Acessos de usu√°rios

### **M√©tricas**
- Projetos criados por dia
- Tempo m√©dio de execu√ß√£o
- Taxa de conclus√£o

### **Alertas**
- Projetos atrasados
- Or√ßamentos estourados
- Documentos em falta