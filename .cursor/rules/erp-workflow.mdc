---
alwaysApply: true
description: "Fluxo de Trabalho para ERP Interno Tech IA-Ready"
---

# üöÄ Fluxo de Trabalho - ERP Interno Tech IA-Ready

## Princ√≠pio Central
**Sempre implementar uma √∫nica funcionalidade por vez**, passando pelo ciclo:
**Escopo (PRD) ‚Üí Arquitetura & Padr√µes ‚Üí Implementa√ß√£o isolada ‚Üí Testes ‚Üí Valida√ß√£o ‚Üí Entrega**

## 1. PRD (Product Requirements Document)
Antes de qualquer implementa√ß√£o, confirmar:
- Objetivo e impacto da funcionalidade
- Usu√°rios e casos de uso
- Fluxo de entrada/sa√≠da e estados de erro
- Restri√ß√µes funcionais e n√£o-funcionais
- Crit√©rios de aceite (Given/When/Then)

## 2. Arquitetura & Padr√µes
Validar antes de codar:
- Arquitetura mais adequada (hexagonal, modular, event-driven‚Ä¶)
- Padr√µes/metodologias de engenharia (TDD/BDD, trunk-based, feature flags)
- Componentes e bibliotecas padr√µes j√° usados no projeto
- Diagrama de alto n√≠vel da solu√ß√£o

## 3. Implementa√ß√£o Isolada
- Implementar apenas **uma funcionalidade por prompt/PR**
- Seguir arquitetura e padr√µes validados
- Incluir testes unit√°rios e de integra√ß√£o
- Garantir SRP (Single Responsibility Principle)
- Incluir feature flag quando aplic√°vel

## 4. Checklist de Valida√ß√£o
Ap√≥s cada entrega, revisar:
- [ ] PRD confirmado e versionado
- [ ] Crit√©rios de aceite atendidos
- [ ] Arquitetura validada com trade-offs claros
- [ ] Padr√µes/metodologias seguidos
- [ ] Implementa√ß√£o isolada e idempotente
- [ ] Testes cobrindo caminhos cr√≠ticos e de erro
- [ ] Observabilidade instrumentada (logs, m√©tricas, tracing)
- [ ] Seguran√ßa auditada (authN/Z, valida√ß√µes, secrets)
- [ ] Documenta√ß√£o atualizada (README, ADR, changelog)
- [ ] Plano de rollout/rollback definido

## Integra√ß√£o com CI/CD

### Pipeline de Integra√ß√£o Cont√≠nua
- **Build autom√°tico** em cada push
- **Testes unit√°rios** executados automaticamente
- **Linting e formata√ß√£o** validados
- **Type checking** obrigat√≥rio
- **Security scanning** de depend√™ncias

```yaml
# .github/workflows/ci.yml - Exemplo de pipeline
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run type-check
      
      - name: Lint
        run: npm run lint
      
      - name: Format check
        run: npm run format:check
      
      - name: Security audit
        run: npm audit --audit-level moderate
      
      - name: Run tests
        run: npm run test:ci
      
      - name: Coverage report
        run: npm run test:coverage
```

### Branch Protection Rules
- **Revis√£o obrigat√≥ria** antes do merge
- **Status checks** devem passar
- **Atualiza√ß√£o obrigat√≥ria** da branch base
- **Hist√≥rico linear** mantido

```yaml
# Configura√ß√£o de Branch Protection (GitHub)
branch_protection:
  main:
    required_status_checks:
      strict: true
      contexts:
        - "Type Check"
        - "Lint"
        - "Tests"
        - "Security Audit"
    enforce_admins: true
    required_pull_request_reviews:
      required_approving_review_count: 2
      dismiss_stale_reviews: true
      require_code_owner_reviews: true
    restrictions: null
```

### Deploy Autom√°tico
- **Deploy autom√°tico** para staging em develop
- **Deploy manual** para produ√ß√£o em main
- **Rollback autom√°tico** em caso de falha
- **Health checks** p√≥s-deploy

```yaml
# Deploy para staging
deploy_staging:
  needs: quality
  runs-on: ubuntu-latest
  if: github.ref == 'refs/heads/develop'
  steps:
    - name: Deploy to staging
      run: |
        npm run build
        npm run deploy:staging
    
    - name: Health check
      run: |
        curl -f $STAGING_URL/health || exit 1

# Deploy para produ√ß√£o
deploy_production:
  needs: quality
  runs-on: ubuntu-latest
  if: github.ref == 'refs/heads/main'
  environment: production
  steps:
    - name: Deploy to production
      run: |
        npm run build
        npm run deploy:production
    
    - name: Health check
      run: |
        curl -f $PRODUCTION_URL/health || exit 1
```

## Checklist de CI/CD

### Configura√ß√£o Inicial
- [ ] **Pipeline configurado** com todos os steps necess√°rios
- [ ] **Branch protection** ativado para main/develop
- [ ] **Secrets configurados** para deploy
- [ ] **Ambientes** (staging/prod) configurados

### Valida√ß√µes Autom√°ticas
- [ ] **Build** executa sem erros
- [ ] **Testes** passam com cobertura m√≠nima
- [ ] **Linting** sem warnings
- [ ] **Type checking** sem erros
- [ ] **Security audit** sem vulnerabilidades cr√≠ticas

### Deploy e Monitoramento
- [ ] **Deploy autom√°tico** para staging
- [ ] **Deploy manual** para produ√ß√£o
- [ ] **Health checks** funcionando
- [ ] **Rollback** testado e funcional
- [ ] **Monitoramento** ativo p√≥s-deploy