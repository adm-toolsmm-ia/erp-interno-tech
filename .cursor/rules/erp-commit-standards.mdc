---
alwaysApply: true
description: "Padr√µes de commit para o ERP Interno Tech"
globs: *.ts,*.tsx,*.js,*.jsx,*.md,*.json,*.yml,*.yaml
---

# üìù ERP Commit Standards

## Conven√ß√£o Obrigat√≥ria
- **Formato**: Conventional Commits
- **Prefixo**: [ERP] + tipo + escopo
- **Contexto**: Sempre incluir contexto do ERP

## Tipos de Commit
- **feat(ERP/escopo)**: Nova funcionalidade
- **fix(ERP/escopo)**: Corre√ß√£o de bug
- **docs(ERP/escopo)**: Documenta√ß√£o
- **chore(ERP/escopo)**: Tarefas de manuten√ß√£o
- **refactor(ERP/escopo)**: Refatora√ß√£o de c√≥digo
- **style(ERP/escopo)**: Formata√ß√£o, sem mudan√ßa de l√≥gica
- **test(ERP/escopo)**: Testes

## Escopos do ERP
- **UX**: Interface e experi√™ncia do usu√°rio
- **API**: Endpoints e l√≥gica de neg√≥cio
- **DB**: Banco de dados e migrations
- **AUTH**: Autentica√ß√£o e autoriza√ß√£o
- **TENANT**: Multi-tenancy
- **DOCS**: Documenta√ß√£o
- **CONFIG**: Configura√ß√µes e ambiente

## Exemplos V√°lidos
```
feat(ERP/UX): add Kanban view to Projetos module
fix(ERP/API): correct Prisma seed for Cliente validation
docs(ERP/DOCS): create UX/UI guidelines documentation
chore(ERP/CONFIG): update ESLint configuration
refactor(ERP/DB): optimize Projeto queries with indexes
style(ERP/UX): format components with Prettier
test(ERP/API): add unit tests for Orcamento service
```

## Template de Commit
```
[tipo](ERP/[escopo]): [descri√ß√£o clara e concisa]

[corpo opcional explicando o que e por que]
[footer opcional com breaking changes ou issues]
```

## Regras de Qualidade
- **Descri√ß√£o**: m√°ximo 50 caracteres
- **Corpo**: m√°ximo 72 caracteres por linha
- **Idioma**: portugu√™s brasileiro
- **Tempo**: presente do indicativo (adiciona, corrige, atualiza)
- **Escopo**: sempre espec√≠fico ao m√≥dulo do ERP