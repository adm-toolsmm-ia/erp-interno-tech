name: Deploy to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  quality:
    runs-on: ubuntu-latest
    name: Quality Checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Security audit
        run: npm run audit:ci

      - name: Run tests
        run: npm run test:ci

  deploy:
    needs: quality
    runs-on: ubuntu-latest
    name: Deploy to Vercel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}

      - name: Health check
        run: |
          sleep 30
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            curl -f ${{ secrets.VERCEL_PRODUCTION_URL }}/api/health || echo "Health check failed"
          else
            curl -f ${{ secrets.VERCEL_PREVIEW_URL }}/api/health || echo "Health check failed"
          fi

      - name: Notify deployment
        if: success()
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "‚úÖ Production deployment successful"
            echo "üåê URL: ${{ secrets.VERCEL_PRODUCTION_URL }}"
          else
            echo "‚úÖ Preview deployment successful"
            echo "üåê URL: ${{ secrets.VERCEL_PREVIEW_URL }}"
          fi
